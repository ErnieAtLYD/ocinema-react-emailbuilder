// Foundation for Emails by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

/// Calculates a percentage value for a grid column width.
/// @access private
/// @param {number} $colNumber - Column count of the column.
/// @param {number} $totalColumns - Column count of the entire row.
/// @returns {number} A percentage width value.
@function -zf-grid-calc-pct($colNumber, $totalColumns) {
  @return floor(percentage(($colNumber / $totalColumns)) * 1000000) / 1000000;
}

/// Calculates a pixel value for a grid column width.
/// @access private
/// @param {number} $columnNumber - Column count of the column.
/// @param {number} $totalColumns - Column count of the entire row.
/// @param {number} $containerWidth - Width of the surrounding container, in pixels.
/// @returns {number} A pixel width value.
@function -zf-grid-calc-px($columnNumber, $totalColumns, $containerWidth) {
  @return ($containerWidth / $totalColumns * $columnNumber - $global-gutter);
}

// Foundation for Emails by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group global
////

/// Primary color for interactive components like links and buttons.
/// @type Color
$primary-color: #2199e8 !default;

/// Secondary color, used with components that support the `.secondary` class.
/// @type Color
$secondary-color: #777777 !default;

/// Color to indicate a positive status or action, used with the `.success` class.
/// @type Color
$success-color: #3adb76 !default;

/// Color to indicate a caution status or action, used with the `.warning` class.
/// @type Color
$warning-color: #ffae00 !default;

/// Color to indicate a negative status or action, used with the `.alert` class.
/// @type Color
$alert-color: #ec5840 !default;

/// Color used for light gray UI items within Foundation.
/// @type Color
$light-gray: #f3f3f3 !default;

/// Color used for medium gray UI items within Foundation.
/// @type Color
$medium-gray: #cacaca !default;

/// Color used for dark gray UI items within Foundation.
/// @type Color
$dark-gray: #8a8a8a !default;

/// Color used for black ui items within Foundation
/// @type Color
$black: #0a0a0a !default;

/// Color used for white ui items within Foundation
/// @type Color
$white: #fefefe !default;

/// Color used code.
/// @type Color
$pre-color: #ff6908 !default;

/// Width of the container.
/// @type Number
$global-width: 580px !default;

/// Width of the container on small screens.
/// @type Length
$global-width-small: 95% !default;

/// Gutter for grid elements.
/// @type length
$global-gutter: 16px !default;

/// Body background color.
/// @type Length
$body-background: $light-gray !default;

/// Color for the container background
/// @type Color
$container-background: $white !default;

/// Global padding.
/// @type Number
$global-padding: 16px !default;

/// Global margin. Margin requires a capital 'M' to workin Outlook.com
/// @type Number
$global-margin: 16px !default;

/// Global radius of radius-corners.
/// @type Number
$global-radius: 3px !default;

/// Global rounded radius of rounded-corners.
/// @type Number
$global-rounded: 500px !default;

/// Global media query to switch from desktop to mobile styles.
/// @type String
$global-breakpoint: $global-width + $global-gutter !default;

.wrapper {
  width: 100%;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
}

td {
  word-wrap: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
  border-collapse: collapse !important;
}

table, tr, td {
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
  padding-left: 0;
  vertical-align: top;
  text-align: left;
}

// Foundation for Emails by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

////
/// @group grid
////

/// Default number of columns for an email.
/// @type Number
$grid-column-count: 12 !default;

/// Default padding for the bottom of a column.
/// @type Number
$column-padding-bottom: $global-padding !default;

/// Default border radius for the container. Use a px value
/// @type Number
$container-radius: 0 !default;

//For viewing email in browser
@media only screen {
  html {
    min-height: 100%;
    background: $body-background;
  }
}

table {
  &.body {
    background: $body-background;
    height: 100%;
    width: 100%;
  }

  &.container {
    background: $container-background;
    width: $global-width;
    margin: 0 auto;
    Margin: 0 auto;
    text-align: inherit;
  }

  &.row {
    padding: 0;
    width: 100%;
    position: relative;
  }

  &.spacer {
    width: 100%;
    td {
      mso-line-height-rule: exactly;
    }
  }
}

table.container table.row {
  display: table;
}

td.columns,
td.column,
th.columns,
th.column {
  margin: 0 auto;
  Margin: 0 auto;
  padding-left: $global-gutter;
  padding-bottom: $column-padding-bottom;

  // Prevents Nested columns from double the padding
  .column,
  .columns {
    padding-left: 0 !important;
    padding-right: 0 !important;

    center {
      min-width: none !important;
    }
  }
}

td.columns.last,
td.column.last,
th.columns.last,
th.column.last {
  padding-right: $global-gutter;
}

//makes sure nested tables are 100% width
td.columns,
td.column,
th.columns,
th.column {
  table {
    width: 100%;

    &.button {
      width:auto;

      &.expanded{
        width: 100%;
      }
    }
  }
}

@for $i from 1 through $grid-column-count {
  td.large-#{$i},
  th.large-#{$i} {
    width: -zf-grid-calc-px($i, $grid-column-count, $global-width);
    padding-left: $global-gutter / 2;
    padding-right: $global-gutter / 2;
  }

  td.large-#{$i}.first,
  th.large-#{$i}.first {
    padding-left: $global-gutter;
  }

  td.large-#{$i}.last,
  th.large-#{$i}.last {
    padding-right: $global-gutter;
  }

  //Collapsed logic
  .collapse {
    > tbody > tr > td.large-#{$i},
    > tbody > tr > th.large-#{$i} {
      padding-right: 0;
      padding-left: 0;
      width: -zf-grid-calc-px($i, $grid-column-count, $global-width) + $global-gutter;
    }

    //Gotta give it that extra love for the first and last columns.
    td.large-#{$i}.first,
    th.large-#{$i}.first,
    td.large-#{$i}.last,
    th.large-#{$i}.last {
      width: -zf-grid-calc-px($i, $grid-column-count, $global-width) + ($global-gutter * 1.5);
    }
  }

  td.large-#{$i} center,
  th.large-#{$i} center {
    min-width: -zf-grid-calc-px($i, $grid-column-count, $global-width) - ($global-gutter * 2);
  }

  .body .columns td.large-#{$i},
  .body .column td.large-#{$i},
  .body .columns th.large-#{$i},
  .body .column th.large-#{$i} {
    width: -zf-grid-calc-pct($i, $grid-column-count);
  }
}

@for $i from 1 through ($grid-column-count - 1) {
  td.large-offset-#{$i},
  td.large-offset-#{$i}.first,
  td.large-offset-#{$i}.last,
  th.large-offset-#{$i},
  th.large-offset-#{$i}.first,
  th.large-offset-#{$i}.last {
    //1.5 takes in effect a whole empty cell.
    padding-left: -zf-grid-calc-px($i, $grid-column-count, $global-width) + $global-gutter * 2;
  }
}

td.expander,
th.expander {
  visibility: hidden;
  width: 0;
  padding: 0 !important;
}

// adds radius to container
table.container.radius {
  border-radius: $container-radius;
  border-collapse: separate;
}

// Foundation for Emails by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

////
/// @group alignment
////

table,
th,
td,
h1,
h2,
h3,
h4,
h5,
h6,
p,
span {
  &.text-center {
    text-align: center;
  }

  &.text-left {
    text-align: left;
  }

  &.text-right {
    text-align: right;
  }
}

span.text-center {
  display: block;
  width: 100%;
  text-align: center;
}

@media only screen and (max-width: #{$global-breakpoint}) {
  .small-float-center {
    margin: 0 auto !important;
    float: none !important;
    text-align: center !important;
  }

  .small-text-center {
    text-align: center !important;
  }

  .small-text-left {
    text-align: left !important;
  }

  .small-text-right {
    text-align: right !important;
  }
}

img.float-left {
  float: left;
  text-align: left;
}

img.float-right {
  float: right;
  text-align: right;
}

img.float-center,
img.text-center {
  margin: 0 auto;
  Margin: 0 auto;
  float: none;
  text-align: center;
}

table,
td,
th {
  &.float-center {
    margin: 0 auto;
    Margin: 0 auto;
    float: none;
    text-align: center;
  }
}

// Foundation for Emails by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

////
/// @group typography
////

/// Global font color.
/// @type Color
$global-font-color: $black !default;

/// Global font family.
/// @type Font
$body-font-family: Helvetica, Arial, sans-serif !default;

/// Global font weight.
/// @type Keyword
$global-font-weight: normal !default;

/// Header color
/// @type Color
$header-color: inherit !default;

/// Global line height.
/// @type Number
$global-line-height: 130% !default;

/// Font size of body text.
/// @type Number
$global-font-size: 16px !default;

/// Line height of body text.
/// @type Number
$body-line-height: $global-line-height !default;

/// Font family of headings.
/// @type List
$header-font-family: $body-font-family !default;

/// Font family of headings.
/// @type List
$header-font-weight: $global-font-weight !default;

/// Font size of `<h1>` elements.
/// @type Number
$h1-font-size: 34px !default;

/// Font size of `<h2>` elements.
/// @type Number
$h2-font-size: 30px !default;

/// Font size of `<h3>` elements.
/// @type Number
$h3-font-size: 28px !default;

/// Font size of `<h4>` elements.
/// @type Number
$h4-font-size: 24px !default;

/// Font size of `<h5>` elements.
/// @type Number
$h5-font-size: 20px !default;

/// Font size of `<h6>` elements.
/// @type Number
$h6-font-size: 18px !default;

/// Margin bottom of `<h1>` through `<h6>` elements.
/// @type Number
$header-margin-bottom: 10px !default;

/// Margin bottom of paragraphs.
/// @type Number
$paragraph-margin-bottom: 10px !default;

/// Default font size for `<small>`.
/// @type Number
$small-font-size: 80% !default;

/// Color of `<small>` elements when placed inside headers.
/// @type Color
$small-font-color: $medium-gray !default;

/// Font size of lead paragraphs.
/// @type Number
$lead-font-size: $global-font-size * 1.25 !default;

/// Line height of lead paragraphs.
/// @type Number
$lead-line-height: 160% !default;

/// Padding inside paragraphs.
/// @type Number
$text-padding: 10px !default;

/// Default line height for subheaders.
/// @type Number
$subheader-lineheight: 1.4 !default;

/// Default font color for subheaders.
/// @type Color
$subheader-color: $dark-gray !default;

/// Default font weight for subheaders.
/// @type String
$subheader-font-weight: $global-font-weight !default;

/// Default top margin for subhheaders.
/// @type Number
$subheader-margin-top: 4px !default;

/// Default bottom margin for subheaders.
/// @type Number
$subheader-margin-bottom: 8px !default;

/// Maximum width of a divider.
/// @type Number
$hr-width: $global-width !default;

/// Default border for a divider.
/// @type List
$hr-border: 1px solid $black !default;

/// Default margin for a divider.
/// @type Number | List
$hr-margin: 20px !default;

/// Default alignment for a divider.
/// @type String
$hr-align: center !default;

/// Text decoration for anchors.
/// @type Keyword
$anchor-text-decoration: none !default;

/// Text color of anchors.
/// @type Color
$anchor-color: $primary-color !default;

/// Text color of anchors to visited links.
/// @type Color
$anchor-color-visited: $anchor-color !default;

/// Text color of anchors on hover.
/// @type Color
$anchor-color-hover: darken($primary-color, 10%) !default;

/// Text color of active anchors.
/// @type Color
$anchor-color-active: $anchor-color-hover !default;

/// Default font size for statistic numbers.
/// @type Number
$stat-font-size: 40px !default;

/// Removing the iOS telephone and address styling
/// @type Boolean
$remove-ios-blue: true !default;

/// Create a divider/horizontal rule.
/// @param {String} $align  - Left, center, or right
/// @param {String} $width  - Width of divider
/// @param {String} $border - Shorthand border style for divider
/// @param {String} $margin - Margin above and below divider
@mixin h-line($align: $hr-align, $width: $hr-width, $border: $hr-border, $margin: nth($hr-margin, 1)) {
  @at-root {
    td.columns & table,
    td.column  & table,
    th.columns & table,
    th.column  & table {
      width: auto;
    }
  }

  th {
    padding-bottom: $margin;
    @if $align == 'left' {
      text-align: left;
    } @elseif $align == 'right' {
      text-align: right;
    } @else {
      text-align: center;
    }
  }

    table {
      display: inline-block;
      margin: 0;
      Margin: 0;
    }

      td {
        width: $width;
        height: 0;
        padding-top: $margin;
        clear: both;
        border-top: 0;
        border-right: 0;
        border-bottom: $border;
        border-left: 0;
        font-size: 0;
        line-height: 0;
      }
}

body,
table.body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
td,
th {
  color: $global-font-color;
  font-family: $body-font-family;
  font-weight: $global-font-weight;
  padding-top: 0;
  padding-right: 0;
  padding-bottom: 0;
  padding-left: 0;
  margin: 0;
  Margin: 0;
  text-align: left;
  line-height: $global-line-height;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: $header-color;
  word-wrap: normal;
  font-family: $header-font-family;
  font-weight: $header-font-weight;
  margin-bottom: $header-margin-bottom;
  Margin-bottom: $header-margin-bottom;
}

h1 {
  font-size: $h1-font-size;
}

h2 {
  font-size: $h2-font-size;
}

h3 {
  font-size: $h3-font-size;
}

h4 {
  font-size: $h4-font-size;
}

h5 {
  font-size: $h5-font-size;
}

h6 {
  font-size: $h6-font-size;
}

body,
table.body,
p,
td,
th {
  font-size: $global-font-size;
  line-height: $body-line-height;
}

p {
  margin-bottom: $paragraph-margin-bottom;
  Margin-bottom: $paragraph-margin-bottom;

  &.lead {
    font-size: $lead-font-size;
    line-height: $lead-line-height;
  }

  &.subheader {
    margin-top: $subheader-margin-top;
    margin-bottom: $subheader-margin-bottom;
    Margin-top: $subheader-margin-top;
    Margin-bottom: $subheader-margin-bottom;
    font-weight: $subheader-font-weight;
    line-height: $subheader-lineheight;
    color: $subheader-color;
  }
}

small {
  font-size: $small-font-size;
  color: $small-font-color;
}

a {
  color: $anchor-color;
  text-decoration: $anchor-text-decoration;
  font-family: $body-font-family;
  font-weight: $global-font-weight;
  padding: 0;
  text-align: left;
  line-height: $global-line-height;

  &:hover {
    color: $anchor-color-hover;
  }

  &:active {
    color: $anchor-color-active;
  }

  &:visited {
    color: $anchor-color-visited;
  }
}

h1 a,
h1 a:visited,
h2 a,
h2 a:visited,
h3 a,
h3 a:visited,
h4 a,
h4 a:visited,
h5 a,
h5 a:visited,
h6 a,
h6 a:visited {
  color: $anchor-color;
}

pre {
  background: $light-gray;
  margin: 30px 0;
  Margin: 30px 0;

  code {
    color: $medium-gray;

    span.callout {
      color: $dark-gray;
      font-weight: bold;
    }

    span.callout-strong {
      color: $pre-color;
      font-weight: bold;
    }
  }
}

// Horizontal rule
table.hr,
table.h-line {
  @include h-line($hr-align, $hr-width, $hr-border, $hr-margin);
}

// Use to style a large number to display a statistic
.stat {
  font-size: $stat-font-size;
  line-height: 1;

  p + & {
    margin-top: -16px;
    Margin-top: -16px;
  }
}

// preheader styles
span.preheader {
  display: none !important;
  visibility: hidden;
  mso-hide: all !important;
  font-size: 1px;
  color: $body-background; // needs to match background color of it's container
  line-height: 1px;
  max-height: 0px;
  max-width: 0px;
  opacity: 0;
  overflow: hidden;
}

// Removing the iOS colors put in for telephone and addresses
@if $remove-ios-blue {
  // Wrapping in a media only screen to have inline-css respect the styling
  @media only screen {
    a[x-apple-data-detectors] {
      color: inherit !important;
      text-decoration: none !important;
      font-size: inherit !important;
      font-family: inherit !important;
      font-weight: inherit !important;
      line-height: inherit !important;
    }
  }
}

// Foundation for Emails by ZURB
// zurb.com/ink/
// Licensed under MIT Open Source

////
/// @group callout
////

/// Background color of a callout.
/// @type Color
$callout-background: $white !default;

/// Fade value for callout backgrounds.
/// @type Number
$callout-background-fade: 85% !default;

/// Padding inside a callout.
/// @type Length
$callout-padding: 10px !default;

/// Bottom margin of a callout.
/// @type Length
$callout-margin-bottom: $global-margin !default;

/// Border around a callout.
/// @type Border
$callout-border: 1px solid darken($callout-background, 20%) !default;

/// Border around a callout with the `.success` class.
/// @type Border
$callout-border-secondary: 1px solid darken($secondary-color, 20%) !default;

/// Border around a callout with the `.success` class.
/// @type Border
$callout-border-success: 1px solid darken($success-color, 20%) !default;

/// Border around a callout with the `.warning` class.
/// @type Border
$callout-border-warning: 1px solid darken($warning-color, 20%) !default;

/// Border around a callout with the `.alert` class.
/// @type Border
$callout-border-alert: 1px solid darken($alert-color, 20%) !default;

table.callout {
  margin-bottom: $callout-margin-bottom;
  Margin-bottom: $callout-margin-bottom;
}

th.callout-inner {
  width: 100%;
  border: $callout-border;
  padding: $callout-padding;
  background: $callout-background;

  &.primary {
    background: scale-color($primary-color, $lightness: $callout-background-fade);
    border: $callout-border-secondary;
    color: $black;
  }

  &.secondary {
    // background: scale-color($secondary-color, $lightness: $callout-background-fade);
    background: #333;
    border: $callout-border-secondary;
    color: $black;
  }

  &.success {
    background: scale-color($success-color, $lightness: $callout-background-fade);
    border: $callout-border-success;
    color: $white;
  }

  &.warning {
    background: scale-color($warning-color, $lightness: $callout-background-fade);
    border: $callout-border-warning;
    color: $white;
  }

  &.alert {
    background: scale-color($alert-color, $lightness: $callout-background-fade);
    border: $callout-border-alert;
    color: $white;
  }
}
